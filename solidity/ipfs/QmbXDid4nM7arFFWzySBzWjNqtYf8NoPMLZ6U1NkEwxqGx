{"compiler":{"version":"0.8.14+commit.abaa5c0e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_REQ","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"REQ","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pair","type":"address"}],"name":"getTotalValue","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pair","type":"address"}],"name":"markdown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pair","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"valuation","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getTotalValue(address)":{"params":{"_pair":"pair that includes requiem token  - the value of the requiem reserve is assumed at 1 unit of quote  - is consistent with the uniswapV2-type case"}},"valuation(address,uint256)":{"params":{"_pair":"general pair that has the RequiemSwap interface implemented","amount_":"the amount of LP to price in REQ  - is consistent with the uniswapV2-type case"}}},"version":1},"userdoc":{"kind":"user","methods":{"getTotalValue(address)":{"notice":"note for general pairs the price does not necessarily satisfy the conditon that the lp value consists 50% of the one and the other token since the mid price is the quotient of the reserves. That is not necessarily the case for general pairs, therefore, we have to calculate the price separately and apply it to the reserve amount for conversion - calculates the total liquidity value denominated in the provided token - uses the 1bps ouytput reserves for that calculation to avoid slippage to   have a too large impact - the sencond token input argument is ignored when using pools with only 2 tokens"},"valuation(address,uint256)":{"notice":"- calculates the value in reqt of the input LP amount provided"}},"notice":"Bonding calculator for weighted pairs","version":1}},"settings":{"compilationTarget":{"contracts/WeightedRequiemCalculator.sol":"WeightedRequiemCalculator"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":999999},"remappings":[]},"sources":{"contracts/WeightedRequiemCalculator.sol":{"keccak256":"0xfd122f709cb9f33064c3bae4a0f9ad8fb2b6a46f840c5f97c47afeba978e74e8","license":"MIT","urls":["bzz-raw://4cb6336e0ac5ec33c9e437017e138cfb8b58b265f8f25a3a319a8e23fcdbc0a8","dweb:/ipfs/QmTYzUA5b6Q4zbY92aTfUuAHDeBDYeGPRd1ymrspkWbccu"]},"contracts/interfaces/ERC20/IERC20.sol":{"keccak256":"0xcf9183e328685c9d4eb47d374877363f8d84e5b8be528b0b6299eb8b54178d17","license":"MIT","urls":["bzz-raw://6ef4ced128c0fc4df7b8050791bc99471997243c61cab9aced1f2c9f14a67b99","dweb:/ipfs/QmWRkUuJtE7SPB9eArBGh7DoRwCs8HSLy89V5Zti9u47m3"]},"contracts/interfaces/IBondingCalculator.sol":{"keccak256":"0xf1198465c8afdfa0e05030ed0d09c48c500e233b7c78b58b758c4a2a9971dda9","license":"MIT","urls":["bzz-raw://0abd03b1fe2a69744dd0bca843636a49c23fedbf433c85e18e8e06126b81e177","dweb:/ipfs/QmYQQam1gk7Nau9EpXYCL3mpoSs4UnLGGuA5VaziWz6ECd"]},"contracts/interfaces/IRequiemSwap.sol":{"keccak256":"0xde0e906cc42fc4e776d5865aa6a0922d2a887aadbba6e1b9d06deaec021f9715","license":"MIT","urls":["bzz-raw://870120337e34d4433387b5e8356b490bb8b24fd49818d44f1cc3a4cf8f233b70","dweb:/ipfs/QmVrxoCE4JPBEjYSCa1MzJ5XXDPbVwGTrxP3W44oNjVAe9"]},"contracts/interfaces/IWeightedPair.sol":{"keccak256":"0xd93061bcdefda9e081c539f1e0ea1db6e94e0da3e1ad56e29285e3cce7e7bdb6","license":"MIT","urls":["bzz-raw://80f942a832327d48f9a6cbad9f9917e3799b3ebe6f7387b561337e5bfd846a8b","dweb:/ipfs/QmQ9BSMmdRHkREzuEkGvYaAhikcHFhJyk9TJxy3KayhcJo"]},"contracts/libraries/math/FixedPoint.sol":{"keccak256":"0xbc01a107ea413f93132f3915f71c430040586c1e6e45086c9c5df652325138be","license":"MIT","urls":["bzz-raw://7716c7c9908be6c432388a26718e43c08a93c35e39cc5a53d855eaf0ff558a6f","dweb:/ipfs/QmPc3mq6ixSSvYncV8UKuDH4qKuCRcyE2VEa1TQk6HZP7J"]},"contracts/libraries/math/FullMath.sol":{"keccak256":"0xf8f11b470ccc3673b302ffa022aaa5e53f9661c96deae64a8656878795d219e4","license":"MIT","urls":["bzz-raw://7c93408b5cf4b70bdf817289217bee57eb7092fc2cc01e27831fddbdd4af354f","dweb:/ipfs/QmbmPTHRGCphChiHjF97pgFkJsijAAhLbLgGo5hm9vAWb1"]},"contracts/libraries/math/SqrtMath.sol":{"keccak256":"0xd1f64ca54a9c99461a7ddbd4cfafd92f9c1ac593f33e27c0d67a3cbbd14459b0","license":"MIT","urls":["bzz-raw://3cd583375d2c88fb59e3f4af2f6a491064e9ab8394918028dcaeea922d12d3ff","dweb:/ipfs/QmNbR12qPXGkYS8zcg1PYfJXM4QyMEn4kGQ4DMbnXrxcre"]}},"version":1}